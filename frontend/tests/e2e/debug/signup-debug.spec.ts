import { test, expect } from '@playwright/test';

test.describe('Ê≥®ÂÜåË∞ÉËØï', () => {
  test.beforeEach(async ({ page }) => {
    // ÂØºËà™Âà∞Ê≥®ÂÜåÈ°µÈù¢
    await page.goto('/signup');
    await page.waitForLoadState('networkidle');
  });

  test('ËØ¶ÁªÜË∞ÉËØïÊ≥®ÂÜåËøáÁ®ã', async ({ page }) => {
    console.log('ÂºÄÂßãÊ≥®ÂÜåË∞ÉËØïÊµãËØï');

    // Ê£ÄÊü•È°µÈù¢ÊòØÂê¶Ê≠£Á°ÆÂä†ËΩΩ
    await expect(page.locator('[data-testid="signup-form"]')).toBeVisible();
    console.log('‚úì Ê≥®ÂÜåË°®ÂçïÂ∑≤Âä†ËΩΩ');

    // Â°´ÂÜôË°®Âçï
    const testUser = {
      name: 'Debug User',
      email: 'debug@test.com',
      password: 'password123',
      confirmPassword: 'password123'
    };

    await page.fill('[data-testid="name-input"]', testUser.name);
    await page.fill('[data-testid="email-input"]', testUser.email);
    await page.fill('[data-testid="password-input"]', testUser.password);
    await page.fill('[data-testid="confirm-password-input"]', testUser.confirmPassword);

    console.log('‚úì Ë°®ÂçïÂ≠óÊÆµÂ∑≤Â°´ÂÜô');

    // Ê£ÄÊü•Êèê‰∫§ÊåâÈíÆÁä∂ÊÄÅ
    const submitButton = page.locator('[data-testid="signup-button"]');
    await expect(submitButton).toBeEnabled();
    console.log('‚úì Êèê‰∫§ÊåâÈíÆÂ∑≤ÂêØÁî®');

    // ÁõëÂê¨ÁΩëÁªúËØ∑Ê±Ç
    const requests: any[] = [];
    page.on('request', (request) => {
      if (request.url().includes('/api/auth')) {
        requests.push({
          url: request.url(),
          method: request.method(),
          postData: request.postData()
        });
        console.log(`üåê APIËØ∑Ê±Ç: ${request.method()} ${request.url()}`);
      }
    });

    // ÁõëÂê¨ÁΩëÁªúÂìçÂ∫î
    page.on('response', async (response) => {
      if (response.url().includes('/api/auth')) {
        const status = response.status();
        console.log(`üì° APIÂìçÂ∫î: ${status} ${response.url()}`);
        
        try {
          const responseBody = await response.text();
          console.log(`üìÑ ÂìçÂ∫îÂÜÖÂÆπ: ${responseBody}`);
        } catch (error) {
          console.log(`‚ùå Êó†Ê≥ïËØªÂèñÂìçÂ∫îÂÜÖÂÆπ: ${error}`);
        }
      }
    });

    // ÁõëÂê¨ÊéßÂà∂Âè∞Ê∂àÊÅØ
    page.on('console', (msg) => {
      if (msg.type() === 'error') {
        console.log(`üö® ÊéßÂà∂Âè∞ÈîôËØØ: ${msg.text()}`);
      } else if (msg.type() === 'log') {
        console.log(`üìù ÊéßÂà∂Âè∞Êó•Âøó: ${msg.text()}`);
      }
    });

    // Ê≥®ÂÖ•‰∏Ä‰∫õË∞ÉËØï‰ª£Á†ÅÊù•ÁõëÊéßÁä∂ÊÄÅ
    await page.addInitScript(() => {
      // ÁõëÊéßlocalStorageÂèòÂåñ
      const originalSetItem = localStorage.setItem;
      localStorage.setItem = function(key, value) {
        console.log(`üì¶ localStorageËÆæÁΩÆ: ${key} = ${value}`);
        return originalSetItem.call(this, key, value);
      };

      // ÁõëÊéßfetchËØ∑Ê±Ç
      const originalFetch = window.fetch;
      window.fetch = function(...args) {
        console.log(`üîÑ FetchËØ∑Ê±Ç:`, args[0]);
        return originalFetch.apply(this, args).then(response => {
          console.log(`‚úÖ FetchÂìçÂ∫î:`, response.status, response.url);
          return response;
        });
      };
    });

    // Êèê‰∫§Ë°®Âçï
    await submitButton.click();
    console.log('‚úì Â∑≤ÁÇπÂáªÊèê‰∫§ÊåâÈíÆ');

    // Á≠âÂæÖ‰∏ÄÊÆµÊó∂Èó¥ËßÇÂØüÈ°µÈù¢ÂèòÂåñ
    await page.waitForTimeout(5000);

    // Ê£ÄÊü•ÊòØÂê¶ÊúâÈîôËØØÊ∂àÊÅØ
    const errorMessage = page.locator('.text-red-600');
    if (await errorMessage.isVisible()) {
      const errorText = await errorMessage.textContent();
      console.log(`‚ùå ÂèëÁé∞ÈîôËØØÊ∂àÊÅØ: ${errorText}`);
    } else {
      console.log('‚úì Ê≤°ÊúâÂèëÁé∞ÈîôËØØÊ∂àÊÅØ');
    }

    // Ê£ÄÊü•ÂΩìÂâçURL
    const currentUrl = page.url();
    console.log(`üìç ÂΩìÂâçURL: ${currentUrl}`);

    // Ê£ÄÊü•localStorage‰∏≠ÁöÑËÆ§ËØÅÁä∂ÊÄÅ
    const authState = await page.evaluate(() => {
      const authStore = localStorage.getItem('auth-store');
      return authStore ? JSON.parse(authStore) : null;
    });
    console.log('üóÑÔ∏è Auth StoreÁä∂ÊÄÅ:', JSON.stringify(authState, null, 2));

    // Ê£ÄÊü•ÊòØÂê¶‰ªçÂú®Ê≥®ÂÜåÈ°µÈù¢
    if (currentUrl.includes('/signup')) {
      console.log('‚ùå ‰ªçÂú®Ê≥®ÂÜåÈ°µÈù¢ÔºåÊ≥®ÂÜåÂèØËÉΩÂ§±Ë¥•');
      
      // Ê£ÄÊü•ÊåâÈíÆÁä∂ÊÄÅ
      const buttonText = await submitButton.textContent();
      console.log(`üîò ÊåâÈíÆÊñáÊú¨: ${buttonText}`);
      
      const isButtonDisabled = await submitButton.isDisabled();
      console.log(`üîò ÊåâÈíÆÊòØÂê¶Á¶ÅÁî®: ${isButtonDisabled}`);

    } else {
      console.log('‚úÖ Â∑≤Ë∑≥ËΩ¨Âà∞ÂÖ∂‰ªñÈ°µÈù¢ÔºåÊ≥®ÂÜåÂèØËÉΩÊàêÂäü');
    }

    // ËæìÂá∫ÁΩëÁªúËØ∑Ê±ÇÊëòË¶Å
    console.log(`üìä ÊÄªÂÖ±ÂèëÈÄÅ‰∫Ü ${requests.length} ‰∏™ËÆ§ËØÅÁõ∏ÂÖ≥ËØ∑Ê±Ç`);
    requests.forEach((req, index) => {
      console.log(`   ${index + 1}. ${req.method} ${req.url}`);
      if (req.postData) {
        console.log(`      Êï∞ÊçÆ: ${req.postData}`);
      }
    });

    
  });
}); 