{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/env.ts"],"sourcesContent":["import { createEnv } from '@t3-oss/env-nextjs';\nimport { z } from 'zod';\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z.enum(['development', 'test', 'production']).default('development'),\n    BETTER_AUTH_SECRET: z.string(),\n    GITHUB_CLIENT_ID: z.string(),\n    GITHUB_CLIENT_SECRET: z.string(),\n    GOOGLE_CLIENT_ID: z.string(),\n    GOOGLE_CLIENT_SECRET: z.string(),\n    R2_BUCKET_NAME: z.string(),\n    R2_ACCESS_KEY_ID: z.string(),\n    R2_SECRET_ACCESS_KEY: z.string(),\n    R2_ENDPOINT: z.string(),\n    R2_PUBLIC_URL: z.string(),\n    // Stripe\n    STRIPE_SECRET_KEY: z.string(),\n    STRIPE_WEBHOOK_SECRET: z.string(),\n    // Admin Configuration\n    ADMIN_EMAILS: z.string().optional().default(''),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n    NEXT_PUBLIC_APP_URL: z.string().url(),\n    NEXT_PUBLIC_API_URL: z.string().url(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    BETTER_AUTH_SECRET: process.env.BETTER_AUTH_SECRET,\n    GITHUB_CLIENT_ID: process.env.GITHUB_CLIENT_ID,\n    GITHUB_CLIENT_SECRET: process.env.GITHUB_CLIENT_SECRET,\n    GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,\n    GOOGLE_CLIENT_SECRET: process.env.GOOGLE_CLIENT_SECRET,\n    R2_BUCKET_NAME: process.env.R2_BUCKET_NAME,\n    R2_ACCESS_KEY_ID: process.env.R2_ACCESS_KEY_ID,\n    R2_SECRET_ACCESS_KEY: process.env.R2_SECRET_ACCESS_KEY,\n    R2_ENDPOINT: process.env.R2_ENDPOINT,\n    R2_PUBLIC_URL: process.env.R2_PUBLIC_URL,\n    // Stripe\n    STRIPE_SECRET_KEY: process.env.STRIPE_SECRET_KEY,\n    STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET,\n    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,\n    NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\n    // Admin Configuration\n    ADMIN_EMAILS: process.env.ADMIN_EMAILS,\n    // NEXT_PUBLIC_CLIENTVAR: process.env.NEXT_PUBLIC_CLIENTVAR,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,wRAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,sNAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,sNAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAAE,OAAO,CAAC;QAChE,oBAAoB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC5B,kBAAkB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC1B,sBAAsB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC9B,kBAAkB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC1B,sBAAsB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC9B,gBAAgB,sNAAA,CAAA,IAAC,CAAC,MAAM;QACxB,kBAAkB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC1B,sBAAsB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC9B,aAAa,sNAAA,CAAA,IAAC,CAAC,MAAM;QACrB,eAAe,sNAAA,CAAA,IAAC,CAAC,MAAM;QACvB,SAAS;QACT,mBAAmB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC3B,uBAAuB,sNAAA,CAAA,IAAC,CAAC,MAAM;QAC/B,sBAAsB;QACtB,cAAc,sNAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IAC9C;IAEA;;;;GAIC,GACD,QAAQ;QACN,qCAAqC;QACrC,qBAAqB,sNAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QACnC,qBAAqB,sNAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IACrC;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;QACR,oBAAoB,QAAQ,GAAG,CAAC,kBAAkB;QAClD,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,gBAAgB,QAAQ,GAAG,CAAC,cAAc;QAC1C,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,aAAa,QAAQ,GAAG,CAAC,WAAW;QACpC,eAAe,QAAQ,GAAG,CAAC,aAAa;QACxC,SAAS;QACT,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,mBAAmB;QACnB,mBAAmB;QACnB,sBAAsB;QACtB,cAAc,QAAQ,GAAG,CAAC,YAAY;IAExC;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/schema.ts"],"sourcesContent":["import { boolean, integer, pgTable, text, timestamp } from 'drizzle-orm/pg-core';\n\nexport const user = pgTable('user', {\n  id: text('id').primaryKey(),\n  name: text('name').notNull(),\n  email: text('email').notNull().unique(),\n  emailVerified: boolean('email_verified')\n    .$defaultFn(() => false)\n    .notNull(),\n  image: text('image'),\n  createdAt: timestamp('created_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n  updatedAt: timestamp('updated_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n  role: text('role'),\n  banned: boolean('banned'),\n  banReason: text('ban_reason'),\n  banExpires: timestamp('ban_expires'),\n});\n\nexport const session = pgTable('session', {\n  id: text('id').primaryKey(),\n  expiresAt: timestamp('expires_at').notNull(),\n  token: text('token').notNull().unique(),\n  createdAt: timestamp('created_at').notNull(),\n  updatedAt: timestamp('updated_at').notNull(),\n  ipAddress: text('ip_address'),\n  userAgent: text('user_agent'),\n  userId: text('user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n  impersonatedBy: text('impersonated_by'),\n});\n\nexport const account = pgTable('account', {\n  id: text('id').primaryKey(),\n  accountId: text('account_id').notNull(),\n  providerId: text('provider_id').notNull(),\n  userId: text('user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n  accessToken: text('access_token'),\n  refreshToken: text('refresh_token'),\n  idToken: text('id_token'),\n  accessTokenExpiresAt: timestamp('access_token_expires_at'),\n  refreshTokenExpiresAt: timestamp('refresh_token_expires_at'),\n  scope: text('scope'),\n  password: text('password'),\n  createdAt: timestamp('created_at').notNull(),\n  updatedAt: timestamp('updated_at').notNull(),\n});\n\nexport const verification = pgTable('verification', {\n  id: text('id').primaryKey(),\n  identifier: text('identifier').notNull(),\n  value: text('value').notNull(),\n  expiresAt: timestamp('expires_at').notNull(),\n  createdAt: timestamp('created_at').$defaultFn(() => /* @__PURE__ */ new Date()),\n  updatedAt: timestamp('updated_at').$defaultFn(() => /* @__PURE__ */ new Date()),\n});\n\nexport const file = pgTable('file', {\n  id: text('id').primaryKey(),\n  filename: text('filename').notNull(),\n  originalName: text('original_name').notNull(),\n  mimeType: text('mime_type').notNull(),\n  size: integer('size').notNull(),\n  width: integer('width'),\n  height: integer('height'),\n  r2Key: text('r2_key').notNull(),\n  thumbnailKey: text('thumbnail_key'),\n  uploadUserId: text('upload_user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n  createdAt: timestamp('created_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n  updatedAt: timestamp('updated_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n});\n\nexport const payment = pgTable('payment', {\n  id: text('id').primaryKey(),\n  priceId: text('price_id').notNull(),\n  type: text('type').notNull(),\n  interval: text('interval'),\n  userId: text('user_id')\n    .notNull()\n    .references(() => user.id, { onDelete: 'cascade' }),\n  customerId: text('customer_id').notNull(),\n  subscriptionId: text('subscription_id'),\n  status: text('status').notNull(),\n  periodStart: timestamp('period_start'),\n  periodEnd: timestamp('period_end'),\n  cancelAtPeriodEnd: boolean('cancel_at_period_end'),\n  trialStart: timestamp('trial_start'),\n  trialEnd: timestamp('trial_end'),\n  createdAt: timestamp('created_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n  updatedAt: timestamp('updated_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n});\n\nexport const paymentEvent = pgTable('payment_event', {\n  id: text('id').primaryKey(),\n  paymentId: text('payment_id')\n    .notNull()\n    .references(() => payment.id, { onDelete: 'cascade' }),\n  eventType: text('event_type').notNull(),\n  stripeEventId: text('stripe_event_id').unique(),\n  eventData: text('event_data'), // JSON string\n  createdAt: timestamp('created_at')\n    .$defaultFn(() => /* @__PURE__ */ new Date())\n    .notNull(),\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/types.ts"],"sourcesContent":["export class DatabaseError extends Error {\n  constructor(\n    message: string,\n    public code?: string\n  ) {\n    super(message);\n    this.name = 'DatabaseError';\n  }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,sBAAsB;;IACjC,YACE,OAAe,EACf,AAAO,IAAa,CACpB;QACA,KAAK,CAAC,eAFC,OAAA;QAGP,IAAI,CAAC,IAAI,GAAG;IACd;AACF","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/repositories/base-repository.ts"],"sourcesContent":["import { DatabaseError } from '../types';\n\n// Base Repository interface\nexport interface IBaseRepository<TSelect, TInsert> {\n  findById(id: string): Promise<TSelect | undefined>;\n  findAll(): Promise<TSelect[]>;\n  create(data: TInsert): Promise<TSelect>;\n  update(id: string, data: Partial<TInsert>): Promise<TSelect | undefined>;\n  delete(id: string): Promise<boolean>;\n  exists(id: string): Promise<boolean>;\n  count(): Promise<number>;\n}\n\n// Base Repository abstract class\nexport abstract class BaseRepository<TSelect, TInsert>\n  implements IBaseRepository<TSelect, TInsert>\n{\n  abstract findById(id: string): Promise<TSelect | undefined>;\n  abstract findAll(): Promise<TSelect[]>;\n  abstract create(data: TInsert): Promise<TSelect>;\n  abstract update(id: string, data: Partial<TInsert>): Promise<TSelect | undefined>;\n  abstract delete(id: string): Promise<boolean>;\n  abstract exists(id: string): Promise<boolean>;\n  abstract count(): Promise<number>;\n\n  protected handleError(error: unknown, operation: string, code: string): never {\n    const message = error instanceof Error ? error.message : '未知错误';\n    throw new DatabaseError(`${operation}失败: ${message}`, code);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAcO,MAAe;IAWV,YAAY,KAAc,EAAE,SAAiB,EAAE,IAAY,EAAS;QAC5E,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,MAAM,IAAI,0IAAA,CAAA,gBAAa,CAAC,GAAG,UAAU,IAAI,EAAE,SAAS,EAAE;IACxD;AACF","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/index.ts"],"sourcesContent":["import { env } from '@/env';\nimport { drizzle } from 'drizzle-orm/neon-http';\nimport * as schema from './schema';\n\nconst db = drizzle(env.DATABASE_URL, { schema });\n\nexport default db;\n\nexport * from './repositories';"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAMA;;;;AAJA,MAAM,KAAK,CAAA,GAAA,sWAAA,CAAA,UAAO,AAAD,EAAE,wHAAA,CAAA,MAAG,CAAC,YAAY,EAAE;IAAE,QAAA;AAAO;uCAE/B","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/repositories/file-repository.ts"],"sourcesContent":["import { and, desc, eq, ilike, sql } from 'drizzle-orm';\nimport type { FileInfo } from '@/lib/file-service';\nimport db from '../index';\nimport { file, user } from '../schema';\n\nexport interface CreateFileData {\n  id: string;\n  filename: string;\n  originalName: string;\n  mimeType: string;\n  size: number;\n  width?: number;\n  height?: number;\n  r2Key: string;\n  thumbnailKey?: string;\n  uploadUserId: string;\n}\n\nexport interface FileListOptions {\n  page?: number;\n  limit?: number;\n  search?: string;\n  userId?: string;\n}\n\ntype FileRecord = typeof file.$inferSelect;\n\nexport class FileRepository {\n  async create(data: CreateFileData): Promise<FileInfo> {\n    const [created] = await db\n      .insert(file)\n      .values({\n        ...data,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      })\n      .returning();\n\n    if (!created) {\n      throw new Error('Failed to create file record');\n    }\n\n    return this.toFileInfo(created);\n  }\n\n  async findById(id: string): Promise<FileInfo | null> {\n    const [found] = await db.select().from(file).where(eq(file.id, id));\n    return found ? this.toFileInfo(found) : null;\n  }\n\n  async findByUserId(userId: string, options: FileListOptions = {}): Promise<{\n    files: FileInfo[];\n    total: number;\n  }> {\n    const { page = 1, limit = 20, search = '' } = options;\n    const offset = (page - 1) * limit;\n\n    const conditions = [eq(file.uploadUserId, userId)];\n    \n    if (search) {\n      conditions.push(ilike(file.originalName, `%${search}%`));\n    }\n\n    const whereClause = conditions.length > 1 ? and(...conditions) : conditions[0];\n\n    // 获取总数\n    const countResult = await db\n      .select({ count: sql`count(*)`.mapWith(Number) })\n      .from(file)\n      .where(whereClause);\n\n    const total = countResult[0]?.count || 0;\n\n    // 获取文件列表\n    const files = await db\n      .select()\n      .from(file)\n      .where(whereClause)\n      .orderBy(desc(file.createdAt))\n      .limit(limit)\n      .offset(offset);\n\n    return {\n      files: files.map((f) => this.toFileInfo(f)),\n      total,\n    };\n  }\n\n  async findAll(options: FileListOptions = {}): Promise<{\n    files: FileInfo[];\n    total: number;\n  }> {\n    const { page = 1, limit = 20, search = '' } = options;\n    const offset = (page - 1) * limit;\n\n    let whereClause = undefined;\n    if (search) {\n      whereClause = ilike(file.originalName, `%${search}%`);\n    }\n\n    // 获取总数\n    const countResult = await db\n      .select({ count: sql`count(*)`.mapWith(Number) })\n      .from(file)\n      .where(whereClause);\n\n    const total = countResult[0]?.count || 0;\n\n    // 获取文件列表 (关联用户表)\n    const files = await db\n      .select({\n        file: file,\n        user: {\n          email: user.email,\n        },\n      })\n      .from(file)\n      .leftJoin(user, eq(file.uploadUserId, user.id))\n      .where(whereClause)\n      .orderBy(desc(file.createdAt))\n      .limit(limit)\n      .offset(offset);\n\n    return {\n      files: files.map((result) => this.toFileInfoWithUser(result.file, result.user?.email)),\n      total,\n    };\n  }\n\n  async delete(id: string): Promise<boolean> {\n    const [deleted] = await db\n      .delete(file)\n      .where(eq(file.id, id))\n      .returning();\n\n    return !!deleted;\n  }\n\n  async deleteByUserId(userId: string, fileId: string): Promise<boolean> {\n    const [deleted] = await db\n      .delete(file)\n      .where(and(eq(file.id, fileId), eq(file.uploadUserId, userId)))\n      .returning();\n\n    return !!deleted;\n  }\n\n  private toFileInfo(fileRecord: FileRecord): FileInfo {\n    return {\n      id: fileRecord.id,\n      filename: fileRecord.filename,\n      originalName: fileRecord.originalName,\n      mimeType: fileRecord.mimeType,\n      size: fileRecord.size,\n      width: fileRecord.width || undefined,\n      height: fileRecord.height || undefined,\n      r2Key: fileRecord.r2Key,\n      thumbnailKey: fileRecord.thumbnailKey || undefined,\n      uploadUserId: fileRecord.uploadUserId,\n      createdAt: fileRecord.createdAt.toISOString(),\n      updatedAt: fileRecord.updatedAt.toISOString(),\n      url: '', // Temporarily set to empty string, actual URL will be added in service layer\n      thumbnailUrl: undefined,\n    };\n  }\n\n  private toFileInfoWithUser(fileRecord: FileRecord, userEmail?: string): FileInfo {\n    return {\n      id: fileRecord.id,\n      filename: fileRecord.filename,\n      originalName: fileRecord.originalName,\n      mimeType: fileRecord.mimeType,\n      size: fileRecord.size,\n      width: fileRecord.width || undefined,\n      height: fileRecord.height || undefined,\n      r2Key: fileRecord.r2Key,\n      thumbnailKey: fileRecord.thumbnailKey || undefined,\n      uploadUserId: fileRecord.uploadUserId,\n      uploadUserEmail: userEmail,\n      createdAt: fileRecord.createdAt.toISOString(),\n      updatedAt: fileRecord.updatedAt.toISOString(),\n      url: '', // Temporarily set to empty string, actual URL will be added in service layer\n      thumbnailUrl: undefined,\n    };\n  }\n}\n\nexport const fileRepository = new FileRepository(); "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/server/db/repositories/index.ts"],"sourcesContent":["export { BaseRepository, type IBaseRepository } from './base-repository';\nexport { FileRepository, fileRepository, type CreateFileData, type FileListOptions } from './file-repository';"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/lib/auth/auth.ts"],"sourcesContent":["import { env } from '@/env';\nimport db from '@/server/db';\nimport { betterAuth } from 'better-auth';\nimport { drizzleAdapter } from 'better-auth/adapters/drizzle';\nimport { admin } from 'better-auth/plugins';\n\nexport const auth = betterAuth({\n  database: drizzleAdapter(db, {\n    provider: 'pg',\n  }),\n  baseURL: env.NEXT_PUBLIC_APP_URL,\n  emailAndPassword: {\n    enabled: true,\n  },\n  socialProviders: {\n    github: {\n      clientId: env.GITHUB_CLIENT_ID,\n      clientSecret: env.GITHUB_CLIENT_SECRET,\n    },\n    google: {\n      clientId: env.GOOGLE_CLIENT_ID,\n      clientSecret: env.GOOGLE_CLIENT_SECRET,\n    },\n  },\n  session: {\n    expiresIn: 60 * 60 * 24 * 30,\n    updateAge: 60 * 60 * 24 * 3,\n    cookieCache: {\n      enabled: true,\n      maxAge: 60 * 60 \n    },\n  },\n  plugins: [admin()],\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;;;;;;AAEO,MAAM,OAAO,CAAA,GAAA,4VAAA,CAAA,aAAU,AAAD,EAAE;IAC7B,UAAU,CAAA,GAAA,4TAAA,CAAA,iBAAc,AAAD,EAAE,0JAAA,CAAA,UAAE,EAAE;QAC3B,UAAU;IACZ;IACA,SAAS,wHAAA,CAAA,MAAG,CAAC,mBAAmB;IAChC,kBAAkB;QAChB,SAAS;IACX;IACA,iBAAiB;QACf,QAAQ;YACN,UAAU,wHAAA,CAAA,MAAG,CAAC,gBAAgB;YAC9B,cAAc,wHAAA,CAAA,MAAG,CAAC,oBAAoB;QACxC;QACA,QAAQ;YACN,UAAU,wHAAA,CAAA,MAAG,CAAC,gBAAgB;YAC9B,cAAc,wHAAA,CAAA,MAAG,CAAC,oBAAoB;QACxC;IACF;IACA,SAAS;QACP,WAAW,KAAK,KAAK,KAAK;QAC1B,WAAW,KAAK,KAAK,KAAK;QAC1B,aAAa;YACX,SAAS;YACT,QAAQ,KAAK;QACf;IACF;IACA,SAAS;QAAC,CAAA,GAAA,uVAAA,CAAA,QAAK,AAAD;KAAI;AACpB","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/app/api/auth/%5B...all%5D/route.ts"],"sourcesContent":["import { auth } from '@/lib/auth/auth';\nimport { toNextJsHandler } from 'better-auth/next-js';\n\nexport const { POST, GET } = toNextJsHandler(auth);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,+SAAA,CAAA,kBAAe,AAAD,EAAE,wIAAA,CAAA,OAAI","debugId":null}}]
}