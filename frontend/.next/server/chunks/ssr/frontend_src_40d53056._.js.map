{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///Users/andy/Documents/PARA/Project/quiz-lib/frontend/src/components/navigation/quiz-nav.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@/lib/utils';\nimport { \n  BookOpen, \n  Settings, \n  BarChart3, \n  FileText, \n  Plus \n} from 'lucide-react';\n\nconst navItems = [\n  {\n    href: '/knowledge',\n    label: '知识库',\n    icon: BookOpen,\n  },\n  {\n    href: '/knowledge/new',\n    label: '创建知识',\n    icon: Plus,\n  },\n  {\n    href: '/prompt-config',\n    label: 'Prompt 配置',\n    icon: Settings,\n  },\n  {\n    href: '/statistics',\n    label: '统计数据',\n    icon: BarChart3,\n  },\n  {\n    href: '/logs',\n    label: '请求日志',\n    icon: FileText,\n  },\n];\n\nexport function QuizNav() {\n  const pathname = usePathname();\n\n  return (\n    <nav className=\"border-b bg-background\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/knowledge\" className=\"text-xl font-bold\">\n              Quiz Master\n            </Link>\n            \n            <div className=\"hidden md:flex space-x-6\">\n              {navItems.map((item) => {\n                const Icon = item.icon;\n                const isActive = pathname === item.href || \n                  (item.href === '/knowledge' && pathname.startsWith('/knowledge') && pathname !== '/knowledge/new');\n                \n                return (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className={cn(\n                      'flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors',\n                      isActive\n                        ? 'bg-primary text-primary-foreground'\n                        : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n                    )}\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    <span>{item.label}</span>\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;;;;;;AAcA,MAAM,WAAW;IACf;QACE,MAAM;QACN,OAAO;QACP,MAAM,kSAAA,CAAA,WAAQ;IAChB;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM,sRAAA,CAAA,OAAI;IACZ;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM,8RAAA,CAAA,WAAQ;IAChB;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM,sSAAA,CAAA,YAAS;IACjB;IACA;QACE,MAAM;QACN,OAAO;QACP,MAAM,kSAAA,CAAA,WAAQ;IAChB;CACD;AAEM,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,0UAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,sbAAC;QAAI,WAAU;kBACb,cAAA,sbAAC;YAAI,WAAU;sBACb,cAAA,sbAAC;gBAAI,WAAU;0BACb,cAAA,sbAAC;oBAAI,WAAU;;sCACb,sbAAC,oWAAA,CAAA,UAAI;4BAAC,MAAK;4BAAa,WAAU;sCAAoB;;;;;;sCAItD,sbAAC;4BAAI,WAAU;sCACZ,SAAS,GAAG,CAAC,CAAC;gCACb,MAAM,OAAO,KAAK,IAAI;gCACtB,MAAM,WAAW,aAAa,KAAK,IAAI,IACpC,KAAK,IAAI,KAAK,gBAAgB,SAAS,UAAU,CAAC,iBAAiB,aAAa;gCAEnF,qBACE,sbAAC,oWAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAW,CAAA,GAAA,+HAAA,CAAA,KAAE,AAAD,EACV,0FACA,WACI,uCACA;;sDAGN,sbAAC;4CAAK,WAAU;;;;;;sDAChB,sbAAC;sDAAM,KAAK,KAAK;;;;;;;mCAVZ,KAAK,IAAI;;;;;4BAapB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOd","debugId":null}}]
}